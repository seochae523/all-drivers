spring:
  kafka:
    bootstrap-servers: kafka:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      group-id: chat-group
      auto-offset-reset: earliest
    template:
      default-topic: chat-messages
  data:
    rest:
      default-page-size: 10
#    elasticsearch:
#      repositories:
#        enabled: true
#      url: ${ELASTIC_SEARCH_URL}
  main:
    allow-bean-definition-overriding: true
  # 데이터 소스 설정
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    # 작성 필요
    url: jdbc:mysql://${DB_HOST}:${DB_PORT}/${DB_SCHEMA}?serverTimezone=Asia/Seoul&characterEncoding=UTF-8
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  # JPA 설정
  jpa:
    show-sql: true
    database: mysql
    hibernate:
      ddl-auto: none
    naming:
      physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        hbm2ddl.import_files_sql_extractor: org.hibernate.tool.hbm2ddl.MultipleLinesSqlCommandExtractor
        current_session_context_class: org.springframework.orm.hibernate5.SpringSessionContext
        default_batch_fetch_size: 100
        jdbc.batch_size: 1000
        format_sql: true
  jwt:
    header: Authorization
    secret: ${JWT_SECRET}

cloud:
  aws:
    cloud-front:
      url: ${CLOUD_FRONT_URL}
    s3:
      url: ${S3_URL}
      bucket: ${S3_BUCKET_NAME}
    stack:
      auto: false
    region:
      static: ap-northeast-2
    credentials:
      accessKey: ${S3_ACCESS_KEY}
      secretKey: ${S3_SECRET_KEY}

    dynamodb:
      endpoint: ${DYNAMODB_ENDPOINT:http://localhost:8000}
      region: ${DYNAMODB_REGION}
      accessKey: ${DYNAMODB_ACCESS_KEY}
      secretKey: ${DYNAMODB_SECRET_KEY}





firebase:
  url: ${FCM_APP_URL}
  file-name: ${FCM_FILE_NAME}


open-api:
  license:
    base-url: ${LICENSE_BASE_URL}
    api-key: ${LICENSE_API_KEY}

sms:
  api-key : ${SMS_API_KEY}
  secret-key : ${SMS_SECRET_KEY}
  domain: ${SMS_DOMAIN}
  phone-number: ${SMS_PHONE_NUMBER}